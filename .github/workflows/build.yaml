name: App build

on:
    workflow_dispatch:

jobs:
    macos-build:
        name: App build
        runs-on: macos-12
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install bun
              uses: oven-sh/setup-bun@v1
            - name: Install dependencies
              run: bun install
            - name: Build extension
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: bun run build
            - name: Install the Apple certificate and provisioning profile
              env:
                  BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
                  P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
                  BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
                  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
              run: |
                  # create variables
                  CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
                  PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
                  KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

                  # import certificate and provisioning profile from secrets
                  echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
                  echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

                  # create temporary keychain
                  security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                  security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
                  security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

                  # import certificate to keychain
                  security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                  security list-keychain -d user -s $KEYCHAIN_PATH

                  # apply provisioning profile
                  mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
                  cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
            - name: Xcode build
              uses: sersoft-gmbh/xcodebuild-action@v3
              with:
                  project: ./GitHub One Monokai.xcodeproj
                  destination: platform=macOS
                  target: GitHub One Monokai
                  action: build
            - name: Prepare artifact
              run: |
                  mkdir -p "bin/GitHub One Monokai"
                  mv "build/Release/GitHub One Monokai.app" "bin/GitHub One Monokai"
                  chmod a+x "bin/GitHub One Monokai/GitHub One Monokai.app/Contents/MacOS/GitHub One Monokai"
                  ln -s /Applications "bin/GitHub One Monokai/Applications"
                  hdiutil create bin/tmp.dmg -ov -volname "GitHub One Monokai" -fs HFS+ -srcfolder "bin/GitHub One Monokai"
                  hdiutil convert bin/tmp.dmg -format UDZO -o "bin/GitHub One Monokai.dmg"
                  rm bin/tmp.dmg
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: GitHub One Monokai
                  path: bin/GitHub One Monokai.dmg
